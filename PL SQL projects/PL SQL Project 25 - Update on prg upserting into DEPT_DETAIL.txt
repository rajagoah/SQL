--ALTER COMMAND TO ADD THE ADDITIONAL COLUMNS TO SUPPORT PROJECT 2
ALTER TABLE DEPT_DETAIL
ADD
(LAST_HIRE_DATE DATE
, TGT_HASH_KEY VARCHAR2(32));


--QUERY TO BE USED IN THE PROG TO EXTRACT DATA FROM SOURCE
SELECT
COALESCE(A.DEPARTMENT_ID,0) AS DEPARTMENT_ID
, COALESCE(A.NAME,'CEO') AS DEPARTMENT_NAME
, EMPS_PER_DEP
, SUMSAL_PER_DEP
, CURRENT_TIMESTAMP AS LAST_LOAD_TS
, N.HIRE_DATE AS LAST_HIRE_DATE
FROM 
(SELECT DEPARTMENT_ID
, COUNT(EMPLOYEE_ID) AS EMPS_PER_DEP
, SUM(SALARY) AS SUMSAL_PER_DEP 
FROM EMPLOYEE GROUP BY DEPARTMENT_ID) B

LEFT OUTER JOIN DEPARTMENT A
ON A.DEPARTMENT_ID = B.DEPARTMENT_ID

LEFT OUTER JOIN 
(SELECT V.*
FROM(
    SELECT 
    C.* FROM
        (SELECT DEPARTMENT_ID
        , HIRE_DATE
        , ROW_NUMBER() OVER (PARTITION BY DEPARTMENT_ID ORDER BY HIRE_DATE DESC) AS RN 
        FROM EMPLOYEE)C WHERE C.RN =1)V)N
ON N.DEPARTMENT_ID = B.DEPARTMENT_ID;

--LOOK UP QUERY TO DETERMINE INSERT OR UPDATE FLAG
SELECT
SRC.DEPARTMENT_ID
, TGT.DEPARTMENT_ID
, STANDARD_HASH(SRC.DEPARTMENT_ID||'~'||SRC.DEPARTMENT_NAME||'~'||SRC.EMPS_PER_DEP||'~'||SRC.SUMSAL_PER_DEP||'~'||SRC.LAST_HIRE_DATE, 'MD5') AS SRC_HASH_KEY
, STANDARD_HASH(TGT.DEPARTMENT_ID||'~'||TGT.DEPARTMENT_NAME||'~'||TGT.EMPS_PER_DEP||'~'||TGT.SUMSAL_PER_DEP||'~'||TGT.LAST_HIRE_DATE, 'MD5') AS TGT_HASH_KEY
FROM
    (
    SELECT
    COALESCE(A.DEPARTMENT_ID,0) AS DEPARTMENT_ID
    , COALESCE(A.NAME,'CEO') AS DEPARTMENT_NAME
    , EMPS_PER_DEP
    , SUMSAL_PER_DEP
    , CURRENT_TIMESTAMP AS LAST_LOAD_TS
    , N.HIRE_DATE AS LAST_HIRE_DATE
    FROM 
        (SELECT DEPARTMENT_ID
        , COUNT(EMPLOYEE_ID) AS EMPS_PER_DEP
        , SUM(SALARY) AS SUMSAL_PER_DEP 
        FROM EMPLOYEE GROUP BY DEPARTMENT_ID) B
        
        LEFT OUTER JOIN DEPARTMENT A
        ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
        
        LEFT OUTER JOIN 
        (SELECT V.*
        FROM(
            SELECT 
            C.* FROM
                (SELECT DEPARTMENT_ID
                , HIRE_DATE
                , ROW_NUMBER() OVER (PARTITION BY DEPARTMENT_ID ORDER BY HIRE_DATE DESC) AS RN 
                FROM EMPLOYEE)C WHERE C.RN =1)V)N
        ON N.DEPARTMENT_ID = B.DEPARTMENT_ID
    ) SRC

LEFT OUTER JOIN DEPT_DETAIL TGT
ON SRC.DEPARTMENT_ID = TGT.DEPARTMENT_ID;

--STORED PROCEDURE
CREATE OR REPLACE PROCEDURE DEPT_DETAIL_UPSERT
IS
    INS_FLAG CHAR(1);
    UPD_FLAG CHAR(1);
    
    CURSOR C1 IS
        --LOOK UP QUERY TO DETERMINE INSERT OR UPDATE FLAG
        SELECT
        SRC.DEPARTMENT_ID AS SRC_DEPT_ID
        , TGT.DEPARTMENT_ID AS TGT_DEPT_ID
        , STANDARD_HASH(SRC.DEPARTMENT_ID||'~'||SRC.DEPARTMENT_NAME||'~'||SRC.EMPS_PER_DEP||'~'||SRC.SUMSAL_PER_DEP||'~'||SRC.LAST_HIRE_DATE, 'MD5') AS SRC_HASH_KEY
        , STANDARD_HASH(TGT.DEPARTMENT_ID||'~'||TGT.DEPARTMENT_NAME||'~'||TGT.EMPS_PER_DEP||'~'||TGT.SUMSAL_PER_DEP||'~'||TGT.LAST_HIRE_DATE, 'MD5') AS TGT_HASH_KEY
        FROM
            (
            SELECT
            COALESCE(A.DEPARTMENT_ID,0) AS DEPARTMENT_ID
            , COALESCE(A.NAME,'CEO') AS DEPARTMENT_NAME
            , EMPS_PER_DEP
            , SUMSAL_PER_DEP
            , CURRENT_TIMESTAMP AS LAST_LOAD_TS
            , N.HIRE_DATE AS LAST_HIRE_DATE
            FROM 
                (SELECT DEPARTMENT_ID
                , COUNT(EMPLOYEE_ID) AS EMPS_PER_DEP
                , SUM(SALARY) AS SUMSAL_PER_DEP 
                FROM EMPLOYEE GROUP BY DEPARTMENT_ID) B
                
                LEFT OUTER JOIN DEPARTMENT A
                ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
                
                LEFT OUTER JOIN 
                (SELECT V.*
                FROM(
                    SELECT 
                    C.* FROM
                        (SELECT DEPARTMENT_ID
                        , HIRE_DATE
                        , ROW_NUMBER() OVER (PARTITION BY DEPARTMENT_ID ORDER BY HIRE_DATE DESC) AS RN 
                        FROM EMPLOYEE)C WHERE C.RN =1)V)N
                ON N.DEPARTMENT_ID = B.DEPARTMENT_ID
            ) SRC
        
        LEFT OUTER JOIN DEPT_DETAIL TGT
        ON SRC.DEPARTMENT_ID = TGT.DEPARTMENT_ID;
    V_ROW1 C1%ROWTYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('PROCDURE COMPILED');
    OPEN C1;
    LOOP
        FETCH C1 INTO V_ROW1;
            IF V_ROW1.TGT_DEPT_ID IS NULL THEN 
                INS_FLAG := 'T';
                DBMS_OUTPUT.PUT_LINE('INSERT FLAG VALUE IS '|| INS_FLAG);
            ELSIF V_ROW1.TGT_DEPT_ID IS NOT NULL AND V_ROW1.SRC_HASH_KEY <> V_ROW1.TGT_HASH_KEY THEN
                UPD_FLAG := 'T';
                DBMS_OUTPUT.PUT_LINE('UPDATE FLAG VALUE IS '|| UPD_FLAG);
            ELSE
                DBMS_OUTPUT.PUT_LINE('NO RECORDS TO UPDATE OR INSERT');
            END IF;
    END LOOP;
    CLOSE C1;
END;


