
/*DEPARTMENT TABLE  --> DEPARTMENT_ID / NAME / LOCATION 
  EMPLOYEE TABLE    --> DEPARTMENT_ID / SALARY / EMPLOYEE_ID */

--QUERY THAT WILL BE USED IN PL/SQL
SELECT
COALESCE(B.DEPARTMENT_ID,0) AS DEPARTMENT_ID
, COALESCE(B.NAME,'EXEC') AS DEPARTMENT_NAME
, COUNT(EMPLOYEE_ID) AS EMPS_PER_DEP
, SUM(SALARY) AS SUMSAL_PER_DEP
, CURRENT_TIMESTAMP AS LAST_LOAD_TS
FROM EMPLOYEE A
LEFT OUTER JOIN DEPARTMENT B
ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
GROUP BY B.DEPARTMENT_ID, B.NAME;

--CREATING TARGET TABLE WITH ABOVE QUERY STRUCTURE
CREATE TABLE DEPT_DETAIL
( DEPARTMENT_ID NUMBER NOT NULL
, DEPARTMENT_NAME VARCHAR(20) NOT NULL
, EMPS_PER_DEP NUMBER
, SUMSAL_PER_DEP NUMBER
, LAST_LOAD_TS TIMESTAMP NOT NULL
, CONSTRAINT DEPT_DETAIL_PK PRIMARY KEY (DEPARTMENT_ID));


--START OF PROCEDURE
DECLARE     
    INS_FLAG BOOLEAN;
    UPD_FLAG VARCHAR2(1);
    CURSOR C1 IS 
        SELECT 
        B.DEPARTMENT_ID AS TGT_DEPT_ID
        FROM DEPARTMENT A 
        LEFT OUTER JOIN DEPT_DETAIL B
        ON A.DEPARTMENT_ID = b.department_id
        WHERE B.DEPARTMENT_ID IS NULL;
    V_ROW1 C1%ROWTYPE;
    
BEGIN
    OPEN C1;
        FETCH C1 INTO V_ROW1;
    CLOSE C1;
    
    -- SETTING THE INSERT FLAG/UPDATE FLAG TO DECIDE IF IT WILL BE AN INSERT OR AN UPDATE.
    IF V_ROW1.TGT_DEPT_ID IS NULL THEN INS_FLAG := 'Y';
    ELSE UPD_FLG := 'Y';
    END IF;
    
    --IF CONDITION TO ROUTE TO EITHER AN INSERT OP OR AN UPDATE OP
    IF INS_FLAG =
END;
    
